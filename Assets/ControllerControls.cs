//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/ControllerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControllerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControllerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControllerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""cb1108cf-1694-4933-8175-a1b71fd0dbfd"",
            ""actions"": [
                {
                    ""name"": ""Left Secundary Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""d26b1253-748e-40b7-a666-bea1615b7dba"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left: Joystick, Move"",
                    ""type"": ""Value"",
                    ""id"": ""c507690b-a0d0-473c-b5ab-5cfdec50dc50"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right: Joystick, Turn"",
                    ""type"": ""Value"",
                    ""id"": ""c7a5ea20-a517-4c80-9794-7c1abf35fbed"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right Secundary Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""85fb0dbb-6451-4859-9850-16fbba3775e3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""8e9fcbd2-85d2-4e2a-ac6e-0001c4553801"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""eaa1e01b-3402-4cc9-a849-2615f4c7e2ef"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right: B"",
                    ""type"": ""Button"",
                    ""id"": ""b1f771c3-b8fe-4911-9ee6-f10ff42ed654"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a7c614d7-25c2-4faf-8d1c-626a228bc1b9"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Secundary Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0815f27b-649d-4cb7-84b4-e92910cbfea9"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left: Joystick, Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""385e1506-5dcc-4b33-b307-6d8a2fb334c5"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right: Joystick, Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""065397cd-b371-4fe4-9bad-1318fa8a15b7"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Secundary Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e901792-8cc2-4773-b5a1-9a5621c7f58b"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04aee182-4d12-4a59-a796-0840a1daa0e8"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fabb01e1-e0b6-406b-b427-8230d6ea9624"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right: B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_LeftSecundaryTrigger = m_Gameplay.FindAction("Left Secundary Trigger", throwIfNotFound: true);
        m_Gameplay_LeftJoystickMove = m_Gameplay.FindAction("Left: Joystick, Move", throwIfNotFound: true);
        m_Gameplay_RightJoystickTurn = m_Gameplay.FindAction("Right: Joystick, Turn", throwIfNotFound: true);
        m_Gameplay_RightSecundaryTrigger = m_Gameplay.FindAction("Right Secundary Trigger", throwIfNotFound: true);
        m_Gameplay_LeftTrigger = m_Gameplay.FindAction("Left Trigger", throwIfNotFound: true);
        m_Gameplay_RightTrigger = m_Gameplay.FindAction("Right Trigger", throwIfNotFound: true);
        m_Gameplay_RightB = m_Gameplay.FindAction("Right: B", throwIfNotFound: true);
    }

    ~@ControllerControls()
    {
        UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, ControllerControls.Gameplay.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_LeftSecundaryTrigger;
    private readonly InputAction m_Gameplay_LeftJoystickMove;
    private readonly InputAction m_Gameplay_RightJoystickTurn;
    private readonly InputAction m_Gameplay_RightSecundaryTrigger;
    private readonly InputAction m_Gameplay_LeftTrigger;
    private readonly InputAction m_Gameplay_RightTrigger;
    private readonly InputAction m_Gameplay_RightB;
    public struct GameplayActions
    {
        private @ControllerControls m_Wrapper;
        public GameplayActions(@ControllerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftSecundaryTrigger => m_Wrapper.m_Gameplay_LeftSecundaryTrigger;
        public InputAction @LeftJoystickMove => m_Wrapper.m_Gameplay_LeftJoystickMove;
        public InputAction @RightJoystickTurn => m_Wrapper.m_Gameplay_RightJoystickTurn;
        public InputAction @RightSecundaryTrigger => m_Wrapper.m_Gameplay_RightSecundaryTrigger;
        public InputAction @LeftTrigger => m_Wrapper.m_Gameplay_LeftTrigger;
        public InputAction @RightTrigger => m_Wrapper.m_Gameplay_RightTrigger;
        public InputAction @RightB => m_Wrapper.m_Gameplay_RightB;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @LeftSecundaryTrigger.started += instance.OnLeftSecundaryTrigger;
            @LeftSecundaryTrigger.performed += instance.OnLeftSecundaryTrigger;
            @LeftSecundaryTrigger.canceled += instance.OnLeftSecundaryTrigger;
            @LeftJoystickMove.started += instance.OnLeftJoystickMove;
            @LeftJoystickMove.performed += instance.OnLeftJoystickMove;
            @LeftJoystickMove.canceled += instance.OnLeftJoystickMove;
            @RightJoystickTurn.started += instance.OnRightJoystickTurn;
            @RightJoystickTurn.performed += instance.OnRightJoystickTurn;
            @RightJoystickTurn.canceled += instance.OnRightJoystickTurn;
            @RightSecundaryTrigger.started += instance.OnRightSecundaryTrigger;
            @RightSecundaryTrigger.performed += instance.OnRightSecundaryTrigger;
            @RightSecundaryTrigger.canceled += instance.OnRightSecundaryTrigger;
            @LeftTrigger.started += instance.OnLeftTrigger;
            @LeftTrigger.performed += instance.OnLeftTrigger;
            @LeftTrigger.canceled += instance.OnLeftTrigger;
            @RightTrigger.started += instance.OnRightTrigger;
            @RightTrigger.performed += instance.OnRightTrigger;
            @RightTrigger.canceled += instance.OnRightTrigger;
            @RightB.started += instance.OnRightB;
            @RightB.performed += instance.OnRightB;
            @RightB.canceled += instance.OnRightB;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @LeftSecundaryTrigger.started -= instance.OnLeftSecundaryTrigger;
            @LeftSecundaryTrigger.performed -= instance.OnLeftSecundaryTrigger;
            @LeftSecundaryTrigger.canceled -= instance.OnLeftSecundaryTrigger;
            @LeftJoystickMove.started -= instance.OnLeftJoystickMove;
            @LeftJoystickMove.performed -= instance.OnLeftJoystickMove;
            @LeftJoystickMove.canceled -= instance.OnLeftJoystickMove;
            @RightJoystickTurn.started -= instance.OnRightJoystickTurn;
            @RightJoystickTurn.performed -= instance.OnRightJoystickTurn;
            @RightJoystickTurn.canceled -= instance.OnRightJoystickTurn;
            @RightSecundaryTrigger.started -= instance.OnRightSecundaryTrigger;
            @RightSecundaryTrigger.performed -= instance.OnRightSecundaryTrigger;
            @RightSecundaryTrigger.canceled -= instance.OnRightSecundaryTrigger;
            @LeftTrigger.started -= instance.OnLeftTrigger;
            @LeftTrigger.performed -= instance.OnLeftTrigger;
            @LeftTrigger.canceled -= instance.OnLeftTrigger;
            @RightTrigger.started -= instance.OnRightTrigger;
            @RightTrigger.performed -= instance.OnRightTrigger;
            @RightTrigger.canceled -= instance.OnRightTrigger;
            @RightB.started -= instance.OnRightB;
            @RightB.performed -= instance.OnRightB;
            @RightB.canceled -= instance.OnRightB;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnLeftSecundaryTrigger(InputAction.CallbackContext context);
        void OnLeftJoystickMove(InputAction.CallbackContext context);
        void OnRightJoystickTurn(InputAction.CallbackContext context);
        void OnRightSecundaryTrigger(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
        void OnRightB(InputAction.CallbackContext context);
    }
}
